// Code generated by MockGen. DO NOT EDIT.
// Source: /home/yathakka/go/src/github.com/aws/amazon-vpc-resource-controller-k8s/pkg/provider/branch/trunk/priority_queue.go

// Package mock_trunk is a generated GoMock package.
package mock_trunk

import (
	reflect "reflect"

	trunk "github.com/aws/amazon-vpc-resource-controller-k8s/pkg/provider/branch/trunk"
	gomock "github.com/golang/mock/gomock"
)

// MockENIHeap is a mock of ENIHeap interface.
type MockENIHeap struct {
	ctrl     *gomock.Controller
	recorder *MockENIHeapMockRecorder
}

// MockENIHeapMockRecorder is the mock recorder for MockENIHeap.
type MockENIHeapMockRecorder struct {
	mock *MockENIHeap
}

// NewMockENIHeap creates a new mock instance.
func NewMockENIHeap(ctrl *gomock.Controller) *MockENIHeap {
	mock := &MockENIHeap{ctrl: ctrl}
	mock.recorder = &MockENIHeapMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockENIHeap) EXPECT() *MockENIHeapMockRecorder {
	return m.recorder
}

// Items mocks base method.
func (m *MockENIHeap) Items() []trunk.ENIDetails {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Items")
	ret0, _ := ret[0].([]trunk.ENIDetails)
	return ret0
}

// Items indicates an expected call of Items.
func (mr *MockENIHeapMockRecorder) Items() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Items", reflect.TypeOf((*MockENIHeap)(nil).Items))
}

// Len mocks base method.
func (m *MockENIHeap) Len() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Len")
	ret0, _ := ret[0].(int)
	return ret0
}

// Len indicates an expected call of Len.
func (mr *MockENIHeapMockRecorder) Len() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Len", reflect.TypeOf((*MockENIHeap)(nil).Len))
}

// Peek mocks base method.
func (m *MockENIHeap) Peek() (*trunk.ENIDetails, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Peek")
	ret0, _ := ret[0].(*trunk.ENIDetails)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Peek indicates an expected call of Peek.
func (mr *MockENIHeapMockRecorder) Peek() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Peek", reflect.TypeOf((*MockENIHeap)(nil).Peek))
}

// Pop mocks base method.
func (m *MockENIHeap) Pop() (*trunk.ENIDetails, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pop")
	ret0, _ := ret[0].(*trunk.ENIDetails)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Pop indicates an expected call of Pop.
func (mr *MockENIHeapMockRecorder) Pop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pop", reflect.TypeOf((*MockENIHeap)(nil).Pop))
}

// Push mocks base method.
func (m *MockENIHeap) Push(item *trunk.ENIDetails) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Push", item)
	ret0, _ := ret[0].(error)
	return ret0
}

// Push indicates an expected call of Push.
func (mr *MockENIHeapMockRecorder) Push(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Push", reflect.TypeOf((*MockENIHeap)(nil).Push), item)
}
